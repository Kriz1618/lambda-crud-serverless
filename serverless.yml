service: aws-lambda-crud
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  region: us-west-2
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource:
            - !Ref TaskTable
        - Effect: Allow
          Action:
            - sns:Publish
            - sns:Subscribe
          Resource: !Ref SNSTopic

functions:
  hello:
    handler: src/handler.hello
    events:
      - httpApi:
          path: /
          method: get
  createTask:
    handler: src/tasksHandler.addTask
    description: Create a new task in DynamoDB
    events:
      - httpApi:
          path: /tasks
          method: post
  getTasks:
    handler: src/tasksHandler.getTasks
    description: Get tasks registers from DynamoDB
    events:
      - httpApi:
          path: /tasks
          method: get
  getTask:
    handler: src/tasksHandler.getTask
    description: Get a task by id from DynamoDB
    events:
      - httpApi:
          path: /tasks/{id}
          method: get
  updateTask:
    handler: src/tasksHandler.updateTask
    description: Update a task 
    events:
      - httpApi:
          path: /tasks/{id}
          method: put
  deleteTask:
    handler: src/tasksHandler.deleteTask
    description: Remove a task in DynamoDB
    events:
      - httpApi:
          path: /tasks/{id}
          method: delete
  sendNotifications: 
    handler: src/notificationsSender.sendMessage
    environment:
      TOPIC_ARN: !Ref SNSTopic
    events:
      - httpApi:
          path: /notifications
          method: post

resources:
  Resources:
    TaskTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TaskTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: snsTopic